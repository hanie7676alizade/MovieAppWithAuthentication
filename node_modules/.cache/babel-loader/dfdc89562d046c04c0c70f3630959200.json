{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/components/screens/AuthPages/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classes from \"./RegisterForm.module.scss\"; // import Button from \"components/common/Button\";\n\nimport { Form, FormFeedback, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(\"this field is required\").matches(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/, \"Enter a valid Email Address\"),\n  password: yup.string().required(\"this field is required\").min(4, \"Password is too short - should be 4 chars minimum.\")\n}).required();\n\nconst RegisterForm = props => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    reValidateMode: \"onChange\",\n    resolver: yupResolver(schema),\n    shouldFocusError: true\n  });\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const onSubmit = async data => {\n    console.log(data, \"data submit\"); // props.onSubmit(data);\n  }; // console.log(errors, \"ERR\");\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: classes.form,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"email\",\n        children: \"Email Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input // autoComplete=\"email\"\n      // id=\"email\"\n      , { ...register(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, { ...register(\"password\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"jgaSrsKRz3ZEqwZ1Pz90jEmOXwM=\", false, function () {\n  return [useForm];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useForm","useState","yupResolver","yup","classes","Form","FormFeedback","FormGroup","Input","Label","Button","schema","object","email","string","required","matches","password","min","RegisterForm","props","register","handleSubmit","formState","errors","reValidateMode","resolver","shouldFocusError","passwordShown","setPasswordShown","onSubmit","data","console","log","form","message"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/components/screens/AuthPages/LoginForm.tsx"],"sourcesContent":["import { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { IUserLoginForm } from \"types/types\";\nimport classes from \"./RegisterForm.module.scss\";\n// import Button from \"components/common/Button\";\nimport {\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  Label,\n  Button,\n} from \"reactstrap\";\n\ninterface Iprops {\n  onSubmit: SubmitHandler<IUserLoginForm>;\n}\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .required(\"this field is required\")\n      .matches(\n        /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/,\n        \"Enter a valid Email Address\"\n      ),\n    password: yup\n      .string()\n      .required(\"this field is required\")\n      .min(4, \"Password is too short - should be 4 chars minimum.\"),\n  })\n  .required();\n\nconst RegisterForm = (props: Iprops) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IUserLoginForm>({\n    reValidateMode: \"onChange\",\n    resolver: yupResolver(schema),\n    shouldFocusError: true,\n  });\n  const [passwordShown, setPasswordShown] = useState<boolean>(false);\n\n  const onSubmit = async (data: IUserLoginForm) => {\n    console.log(data, \"data submit\");\n\n    // props.onSubmit(data);\n  };\n  // console.log(errors, \"ERR\");\n\n  return (\n    <Form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <FormGroup>\n        <Label htmlFor=\"email\">Email Address:</Label>\n        <Input\n          // autoComplete=\"email\"\n          // id=\"email\"\n          {...register(\"email\")}\n\n          // invalid={!!errors.email}\n          // aria-invalid={!!errors.email}\n        />\n        <FormFeedback>{errors.email?.message}</FormFeedback>\n        {/* {errors.email && <p>{errors.email.message}</p>} */}\n      </FormGroup>\n      <FormGroup>\n        <Label htmlFor=\"password\">Password:</Label>\n        <Input\n          {...register(\"password\", { required: true })}\n          // autoComplete=\"current-password\"\n          // type={passwordShown ? \"text\" : \"password\"}\n        />\n        <FormFeedback>{errors.password?.message}</FormFeedback>\n        {/* <span onClick={() => setPasswordShown(!passwordShown)}>show</span>\n        {errors.password && <p>{errors.password.message}</p>} */}\n      </FormGroup>\n      <Button type=\"submit\" color=\"primary\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAuC,iBAAvC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA,OAAOC,OAAP,MAAoB,4BAApB,C,CACA;;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,MANF,QAOO,YAPP;;AAaA,MAAMC,MAAM,GAAGR,GAAG,CACfS,MADY,CACL;EACNC,KAAK,EAAEV,GAAG,CACPW,MADI,GAEJC,QAFI,CAEK,wBAFL,EAGJC,OAHI,CAIH,6CAJG,EAKH,6BALG,CADD;EAQNC,QAAQ,EAAEd,GAAG,CACVW,MADO,GAEPC,QAFO,CAEE,wBAFF,EAGPG,GAHO,CAGH,CAHG,EAGA,oDAHA;AARJ,CADK,EAcZH,QAdY,EAAf;;AAgBA,MAAMI,YAAY,GAAIC,KAAD,IAAmB;EAAA;;EAAA;;EACtC,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,SAAS,EAAE;MAAEC;IAAF;EAHP,IAIFxB,OAAO,CAAiB;IAC1ByB,cAAc,EAAE,UADU;IAE1BC,QAAQ,EAAExB,WAAW,CAACS,MAAD,CAFK;IAG1BgB,gBAAgB,EAAE;EAHQ,CAAjB,CAJX;EASA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,CAAU,KAAV,CAAlD;;EAEA,MAAM6B,QAAQ,GAAG,MAAOC,IAAP,IAAgC;IAC/CC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,aAAlB,EAD+C,CAG/C;EACD,CAJD,CAZsC,CAiBtC;;;EAEA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAE3B,OAAO,CAAC8B,IAAzB;IAA+B,QAAQ,EAAEZ,YAAY,CAACQ,QAAD,CAArD;IAAA,wBACE,QAAC,SAAD;MAAA,wBACE,QAAC,KAAD;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD,CACE;MACA;MAFF,OAGMT,QAAQ,CAAC,OAAD;MAHd;QAAA;QAAA;QAAA;MAAA,QAFF,eAUE,QAAC,YAAD;QAAA,2BAAeG,MAAM,CAACX,KAAtB,kDAAe,cAAcsB;MAA7B;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE,QAAC,SAAD;MAAA,wBACE,QAAC,KAAD;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD,OACMd,QAAQ,CAAC,UAAD,EAAa;UAAEN,QAAQ,EAAE;QAAZ,CAAb;MADd;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE,QAAC,YAAD;QAAA,8BAAeS,MAAM,CAACP,QAAtB,qDAAe,iBAAiBkB;MAAhC;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eAyBE,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,KAAK,EAAC,SAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAlDD;;GAAMhB,Y;UAKAnB,O;;;KALAmB,Y;AAoDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}