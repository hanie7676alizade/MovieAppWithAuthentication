{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport { setLoading } from \"../Common/slice\";\nimport axios from \"../../axiosInstance\";\nexport function* registerSaga(action) {\n  yield put(setLoading(true));\n\n  try {\n    const result = yield axios.post(\"/auth/register\", {\n      email: action.payload.email,\n      password: action.payload.password\n    });\n    localStorage.setItem(\"token\", result.access_token);\n  } catch (err) {\n    console.error(\"sagaERR registerSaga\", err);\n  } finally {\n    yield put(setLoading(false));\n  }\n}\nexport function* loginSaga(action) {\n  yield put(setLoading(true));\n\n  try {// const result: IAuthResult = yield axios.post(\"/auth/login\", {\n    //   email: action.payload.email,\n    //   password: action.payload.password,\n    // });\n    // localStorage.setItem(\"Mtoken\", result.access_token);\n  } catch (err) {\n    console.error(\"sagaERR registerSaga\", err);\n  } finally {\n    yield put(setLoading(false));\n  }\n}","map":{"version":3,"names":["put","setLoading","axios","registerSaga","action","result","post","email","payload","password","localStorage","setItem","access_token","err","console","error","loginSaga"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/redux/Auth/sagas.ts"],"sourcesContent":["import { call, put } from \"redux-saga/effects\";\r\n\r\nimport { setLoading } from \"../Common/slice\";\r\n\r\nimport axios from \"../../axiosInstance\";\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IUserLoginForm } from \"types\";\r\n\r\ninterface IAuthResult {\r\n  access_token: string;\r\n}\r\n\r\nexport function* registerSaga(\r\n  action: PayloadAction<IUserLoginForm>\r\n): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const result: IAuthResult = yield axios.post(\"/auth/register\", {\r\n      email: action.payload.email,\r\n      password: action.payload.password,\r\n    });\r\n\r\n    localStorage.setItem(\"token\", result.access_token);\r\n  } catch (err) {\r\n    console.error(\"sagaERR registerSaga\", err);\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n\r\nexport function* loginSaga(action: PayloadAction<IUserLoginForm>): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    // const result: IAuthResult = yield axios.post(\"/auth/login\", {\r\n    //   email: action.payload.email,\r\n    //   password: action.payload.password,\r\n    // });\r\n    // localStorage.setItem(\"Mtoken\", result.access_token);\r\n  } catch (err) {\r\n    console.error(\"sagaERR registerSaga\", err);\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAeA,GAAf,QAA0B,oBAA1B;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAQA,OAAO,UAAUC,YAAV,CACLC,MADK,EAEM;EACX,MAAMJ,GAAG,CAACC,UAAU,CAAC,IAAD,CAAX,CAAT;;EACA,IAAI;IACF,MAAMI,MAAmB,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,gBAAX,EAA6B;MAC7DC,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeD,KADuC;MAE7DE,QAAQ,EAAEL,MAAM,CAACI,OAAP,CAAeC;IAFoC,CAA7B,CAAlC;IAKAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACO,YAArC;EACD,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;EACD,CATD,SASU;IACR,MAAMb,GAAG,CAACC,UAAU,CAAC,KAAD,CAAX,CAAT;EACD;AACF;AAED,OAAO,UAAUe,SAAV,CAAoBZ,MAApB,EAAsE;EAC3E,MAAMJ,GAAG,CAACC,UAAU,CAAC,IAAD,CAAX,CAAT;;EACA,IAAI,CACF;IACA;IACA;IACA;IACA;EACD,CAND,CAME,OAAOY,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;EACD,CARD,SAQU;IACR,MAAMb,GAAG,CAACC,UAAU,CAAC,KAAD,CAAX,CAAT;EACD;AACF"},"metadata":{},"sourceType":"module"}