{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/HOC/WithPopUp/index.tsx\";\nimport React, { Fragment, useRef } from \"react\";\nimport { Button, Modal, ModalHeader } from \"reactstrap\";\nimport { setPopUp } from \"redux/Common/slice\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport classes from \"./style.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WithPopUp(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  const Component = props => {\n    _s();\n\n    const sectionRef = useRef(null);\n    const [state, setState] = useState(false);\n    const dispatch = useAppDispatch();\n    const {\n      popUpState,\n      popUpButtons,\n      popUpText\n    } = useAppSelector(state => state.Common);\n\n    const onClose = () => {\n      dispatch(setPopUp({\n        state: false,\n        text: \"\",\n        buttons: []\n      }));\n    }; // const checkOnBlur = (e: React.MouseEvent<HTMLDivElement>) => {\n    //   if (e.target === sectionRef.current) onClose();\n    // };\n\n\n    const toggleModal = () => {\n      if (popUpState) dispatch(setPopUp({\n        state: false,\n        text: \"\",\n        buttons: []\n      }));\n    };\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [popUpState && /*#__PURE__*/_jsxDEV(Modal // className={classes.Section}\n      , {\n        toggle: onClose // onClick={checkOnBlur}\n        // ref={sectionRef}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: function noRefCheck() {},\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.popUpWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.popUp,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: popUpText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.buttons,\n              children: popUpButtons.map((item, index) => /*#__PURE__*/_jsxDEV(Button, {\n                color: item.color,\n                size: \"md\",\n                onClick: () => item.isCloseBTN ? onClose() : item.onClick(),\n                children: item.value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Component, \"aGvaU5v7kroarYKUKSrXrTd6koo=\", false, function () {\n    return [useAppDispatch, useAppSelector];\n  });\n\n  return Component;\n}\n_c = WithPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithPopUp\");","map":{"version":3,"names":["React","Fragment","useRef","Button","Modal","ModalHeader","setPopUp","useAppDispatch","useAppSelector","classes","WithPopUp","WrappedComponent","Component","props","sectionRef","state","setState","useState","dispatch","popUpState","popUpButtons","popUpText","Common","onClose","text","buttons","toggleModal","noRefCheck","popUpWrapper","popUp","map","item","index","color","isCloseBTN","onClick","value"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/HOC/WithPopUp/index.tsx"],"sourcesContent":["import React, { Fragment, useRef, ComponentType } from \"react\";\r\nimport { Button, Modal, ModalHeader } from \"reactstrap\";\r\n\r\nimport { setPopUp } from \"redux/Common/slice\";\r\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\r\nimport classes from \"./style.module.scss\";\r\n\r\nexport default function WithPopUp<T>(WrappedComponent: ComponentType<T>) {\r\n  const Component = (props: T) => {\r\n    const sectionRef = useRef(null);\r\n\r\n    const [state, setState] = useState(false);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const { popUpState, popUpButtons, popUpText } = useAppSelector(\r\n      (state) => state.Common\r\n    );\r\n    const onClose = () => {\r\n      dispatch(setPopUp({ state: false, text: \"\", buttons: [] }));\r\n    };\r\n\r\n    // const checkOnBlur = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    //   if (e.target === sectionRef.current) onClose();\r\n    // };\r\n\r\n    const toggleModal = () => {\r\n      if (popUpState)\r\n        dispatch(setPopUp({ state: false, text: \"\", buttons: [] }));\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        {popUpState && (\r\n          <Modal\r\n            // className={classes.Section}\r\n            toggle={onClose}\r\n            // onClick={checkOnBlur}\r\n            // ref={sectionRef}\r\n          >\r\n            <ModalHeader toggle={function noRefCheck() {}}>Modal</ModalHeader>\r\n            <div className={classes.popUpWrapper}>\r\n              <div className={classes.popUp}>\r\n                <span>{popUpText}</span>\r\n                <div className={classes.buttons}>\r\n                  {popUpButtons.map((item, index) => (\r\n                    <Button\r\n                      key={index}\r\n                      color={item.color}\r\n                      size=\"md\"\r\n                      onClick={() =>\r\n                        item.isCloseBTN ? onClose() : item.onClick()\r\n                      }\r\n                    >\r\n                      {item.value}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        )}\r\n        <WrappedComponent {...props} />\r\n      </Fragment>\r\n    );\r\n  };\r\n  return Component;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuD,OAAvD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,QAA2C,YAA3C;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,eAAe,SAASC,SAAT,CAAsBC,gBAAtB,EAA0D;EAAA;;EACvE,MAAMC,SAAS,GAAIC,KAAD,IAAc;IAAA;;IAC9B,MAAMC,UAAU,GAAGZ,MAAM,CAAC,IAAD,CAAzB;IAEA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,KAAD,CAAlC;IAEA,MAAMC,QAAQ,GAAGX,cAAc,EAA/B;IAEA,MAAM;MAAEY,UAAF;MAAcC,YAAd;MAA4BC;IAA5B,IAA0Cb,cAAc,CAC3DO,KAAD,IAAWA,KAAK,CAACO,MAD2C,CAA9D;;IAGA,MAAMC,OAAO,GAAG,MAAM;MACpBL,QAAQ,CAACZ,QAAQ,CAAC;QAAES,KAAK,EAAE,KAAT;QAAgBS,IAAI,EAAE,EAAtB;QAA0BC,OAAO,EAAE;MAAnC,CAAD,CAAT,CAAR;IACD,CAFD,CAV8B,CAc9B;IACA;IACA;;;IAEA,MAAMC,WAAW,GAAG,MAAM;MACxB,IAAIP,UAAJ,EACED,QAAQ,CAACZ,QAAQ,CAAC;QAAES,KAAK,EAAE,KAAT;QAAgBS,IAAI,EAAE,EAAtB;QAA0BC,OAAO,EAAE;MAAnC,CAAD,CAAT,CAAR;IACH,CAHD;;IAKA,oBACE,QAAC,QAAD;MAAA,WACGN,UAAU,iBACT,QAAC,KAAD,CACE;MADF;QAEE,MAAM,EAAEI,OAFV,CAGE;QACA;QAJF;QAAA,wBAME,QAAC,WAAD;UAAa,MAAM,EAAE,SAASI,UAAT,GAAsB,CAAE,CAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UAAK,SAAS,EAAElB,OAAO,CAACmB,YAAxB;UAAA,uBACE;YAAK,SAAS,EAAEnB,OAAO,CAACoB,KAAxB;YAAA,wBACE;cAAA,UAAOR;YAAP;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAK,SAAS,EAAEZ,OAAO,CAACgB,OAAxB;cAAA,UACGL,YAAY,CAACU,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB,QAAC,MAAD;gBAEE,KAAK,EAAED,IAAI,CAACE,KAFd;gBAGE,IAAI,EAAC,IAHP;gBAIE,OAAO,EAAE,MACPF,IAAI,CAACG,UAAL,GAAkBX,OAAO,EAAzB,GAA8BQ,IAAI,CAACI,OAAL,EALlC;gBAAA,UAQGJ,IAAI,CAACK;cARR,GACOJ,KADP;gBAAA;gBAAA;gBAAA;cAAA,QADD;YADH;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eA8BE,QAAC,gBAAD,OAAsBnB;MAAtB;QAAA;QAAA;QAAA;MAAA,QA9BF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAkCD,CAzDD;;EADuE,GACjED,SADiE;IAAA,QAMpDL,cANoD,EAQrBC,cARqB;EAAA;;EA2DvE,OAAOI,SAAP;AACD;KA5DuBF,S"},"metadata":{},"sourceType":"module"}