{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  loading: false,\n  //Alert\n  showAlert: false,\n  messageAlert: \"\",\n  typeAlert: \"\",\n  //Redirect\n  redirectState: false,\n  redirectURL: \"\",\n  //popUp\n  popUpState: false,\n  popUpText: \"\",\n  popUpButtons: []\n};\nconst commonSlice = createSlice({\n  name: \"common\",\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setShowAlert: (state, action) => {\n      state.showAlert = action.payload;\n    },\n    setMessageAlert: (state, action) => {\n      state.messageAlert = action.payload;\n    },\n    setTypeAlert: (state, action) => {\n      state.typeAlert = action.payload;\n    },\n    setRedirect: (state, action) => {\n      state.redirectURL = action.payload.url;\n      state.redirectState = action.payload.state;\n    },\n    setRedirectState: (state, action) => {\n      state.redirectState = action.payload;\n    },\n    setRedirectURL: (state, action) => {\n      state.redirectURL = action.payload;\n    },\n    setPopUp: (state, action) => {\n      state.popUpState = action.payload.state;\n      state.popUpText = action.payload.text;\n      state.popUpButtons = [...action.payload.buttons];\n    } // and saga actions\n\n  }\n});\nexport const {\n  setLoading,\n  setShowAlert,\n  setMessageAlert,\n  setTypeAlert,\n  setRedirect,\n  setRedirectState,\n  setRedirectURL\n} = commonSlice.actions;\nexport default commonSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","loading","showAlert","messageAlert","typeAlert","redirectState","redirectURL","popUpState","popUpText","popUpButtons","commonSlice","name","reducers","setLoading","state","action","payload","setShowAlert","setMessageAlert","setTypeAlert","setRedirect","url","setRedirectState","setRedirectURL","setPopUp","text","buttons","actions","reducer"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/redux/Common/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { IButtonEvent, IButtonProps } from \"types/types\";\n\ntype TinitState = {\n  loading: boolean;\n  showAlert: boolean;\n  messageAlert: string;\n  typeAlert: string;\n  redirectState: boolean;\n  redirectURL: string;\n  popUpState: boolean;\n  popUpText: string;\n  popUpButtons: IpopUpBTN[];\n};\n\ninterface IpopUpBTN {\n  value: string;\n  type?: string;\n  onClick: (event: IButtonEvent) => void;\n}\n\ninterface IPopUpPayLoad {\n  state: boolean;\n  text: string;\n  buttons: IpopUpBTN[];\n}\n\ntype TRedirectObj = {\n  url: string;\n  state: boolean;\n};\n\nconst initialState: TinitState = {\n  loading: false,\n  //Alert\n  showAlert: false,\n  messageAlert: \"\",\n  typeAlert: \"\",\n  //Redirect\n  redirectState: false,\n  redirectURL: \"\",\n  //popUp\n  popUpState: false,\n  popUpText: \"\",\n  popUpButtons: [],\n};\nconst commonSlice = createSlice({\n  name: \"common\",\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    setShowAlert: (state, action: PayloadAction<boolean>) => {\n      state.showAlert = action.payload;\n    },\n    setMessageAlert: (state, action: PayloadAction<string>) => {\n      state.messageAlert = action.payload;\n    },\n    setTypeAlert: (state, action: PayloadAction<string>) => {\n      state.typeAlert = action.payload;\n    },\n\n    setRedirect: (state, action: PayloadAction<TRedirectObj>) => {\n      state.redirectURL = action.payload.url;\n      state.redirectState = action.payload.state;\n    },\n    setRedirectState: (state, action: PayloadAction<boolean>) => {\n      state.redirectState = action.payload;\n    },\n    setRedirectURL: (state, action: PayloadAction<string>) => {\n      state.redirectURL = action.payload;\n    },\n    setPopUp: (state, action: PayloadAction<IPopUpPayLoad>) => {\n      state.popUpState = action.payload.state;\n      state.popUpText = action.payload.text;\n      state.popUpButtons = [...action.payload.buttons];\n    },\n\n    // and saga actions\n  },\n});\nexport const {\n  setLoading,\n  setShowAlert,\n  setMessageAlert,\n  setTypeAlert,\n  setRedirect,\n  setRedirectState,\n  setRedirectURL,\n} = commonSlice.actions;\n\nexport default commonSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAgCA,MAAMC,YAAwB,GAAG;EAC/BC,OAAO,EAAE,KADsB;EAE/B;EACAC,SAAS,EAAE,KAHoB;EAI/BC,YAAY,EAAE,EAJiB;EAK/BC,SAAS,EAAE,EALoB;EAM/B;EACAC,aAAa,EAAE,KAPgB;EAQ/BC,WAAW,EAAE,EARkB;EAS/B;EACAC,UAAU,EAAE,KAVmB;EAW/BC,SAAS,EAAE,EAXoB;EAY/BC,YAAY,EAAE;AAZiB,CAAjC;AAcA,MAAMC,WAAW,GAAGX,WAAW,CAAC;EAC9BY,IAAI,EAAE,QADwB;EAE9BX,YAF8B;EAG9BY,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA2C;MACrDD,KAAK,CAACb,OAAN,GAAgBc,MAAM,CAACC,OAAvB;IACD,CAHO;IAIRC,YAAY,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA2C;MACvDD,KAAK,CAACZ,SAAN,GAAkBa,MAAM,CAACC,OAAzB;IACD,CANO;IAORE,eAAe,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA0C;MACzDD,KAAK,CAACX,YAAN,GAAqBY,MAAM,CAACC,OAA5B;IACD,CATO;IAURG,YAAY,EAAE,CAACL,KAAD,EAAQC,MAAR,KAA0C;MACtDD,KAAK,CAACV,SAAN,GAAkBW,MAAM,CAACC,OAAzB;IACD,CAZO;IAcRI,WAAW,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAgD;MAC3DD,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAAP,CAAeK,GAAnC;MACAP,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACC,OAAP,CAAeF,KAArC;IACD,CAjBO;IAkBRQ,gBAAgB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAA2C;MAC3DD,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACC,OAA7B;IACD,CApBO;IAqBRO,cAAc,EAAE,CAACT,KAAD,EAAQC,MAAR,KAA0C;MACxDD,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;IACD,CAvBO;IAwBRQ,QAAQ,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAiD;MACzDD,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACC,OAAP,CAAeF,KAAlC;MACAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAP,CAAeS,IAAjC;MACAX,KAAK,CAACL,YAAN,GAAqB,CAAC,GAAGM,MAAM,CAACC,OAAP,CAAeU,OAAnB,CAArB;IACD,CA5BO,CA8BR;;EA9BQ;AAHoB,CAAD,CAA/B;AAoCA,OAAO,MAAM;EACXb,UADW;EAEXI,YAFW;EAGXC,eAHW;EAIXC,YAJW;EAKXC,WALW;EAMXE,gBANW;EAOXC;AAPW,IAQTb,WAAW,CAACiB,OART;AAUP,eAAejB,WAAW,CAACkB,OAA3B"},"metadata":{},"sourceType":"module"}