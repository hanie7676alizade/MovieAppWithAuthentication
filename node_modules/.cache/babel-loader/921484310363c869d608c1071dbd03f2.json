{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport commonReducer from \"./Common/slice\";\nimport commonSagaWatcher from \"./Common/sagaWatcher\";\nconst rootReducer = {\n  Common: commonReducer\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware],\n  devTools: process.env.NODE_ENV !== \"production\"\n});\nsagaMiddleware.run(commonSagaWatcher);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","commonReducer","commonSagaWatcher","rootReducer","Common","sagaMiddleware","store","reducer","middleware","devTools","process","env","NODE_ENV","run"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/redux/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport commonReducer from \"./Common/slice\";\r\n\r\nimport commonSagaWatcher from \"./Common/sagaWatcher\";\r\n\r\nconst rootReducer = {\r\n  Common: commonReducer,\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [sagaMiddleware],\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nsagaMiddleware.run(commonSagaWatcher);\r\n\r\nexport default store;\r\n\r\nexport type TStore = ReturnType<typeof store.getState>;\r\nexport type TDispatch = typeof store.dispatch;\r\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,MAAMC,WAAW,GAAG;EAClBC,MAAM,EAAEH;AADU,CAApB;AAIA,MAAMI,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,KAAK,GAAGP,cAAc,CAAC;EAC3BQ,OAAO,EAAEJ,WADkB;EAE3BK,UAAU,EAAE,CAACH,cAAD,CAFe;EAG3BI,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHR,CAAD,CAA5B;AAMAP,cAAc,CAACQ,GAAf,CAAmBX,iBAAnB;AAEA,eAAeI,KAAf"},"metadata":{},"sourceType":"module"}