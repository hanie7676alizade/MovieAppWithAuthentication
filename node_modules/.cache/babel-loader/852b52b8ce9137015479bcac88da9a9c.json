{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { setLoading } from \"../Common/slice\";\nimport axios from \"../../axiosInstance\";\n\nconst registerUser = action => {\n  return axios.post(\"/auth/register\", {\n    email: \" action.payload.email\",\n    password: \"action.payload.password\"\n  });\n};\n\nexport function* registerSaga(action) {\n  yield put(setLoading(true));\n\n  try {\n    const result = yield call(registerUser());\n    if (result) localStorage.setItem(\"Mtoken\", result.access_token);\n  } catch (err) {\n    console.error(\"sagaERR registerSaga\", err);\n  } finally {\n    yield put(setLoading(false));\n  }\n}\nexport function* loginSaga(action) {\n  yield put(setLoading(true));\n\n  try {\n    const result = yield axios.post(\"/auth/login\", {\n      email: action.payload.email,\n      password: action.payload.password\n    });\n    localStorage.setItem(\"Mtoken\", result.access_token);\n  } catch (err) {\n    console.error(\"sagaERR registerSaga\", err);\n  } finally {\n    yield put(setLoading(false));\n  }\n}","map":{"version":3,"names":["call","put","setLoading","axios","registerUser","action","post","email","password","registerSaga","result","localStorage","setItem","access_token","err","console","error","loginSaga","payload"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/redux/Auth/sagas.ts"],"sourcesContent":["import { call, put } from \"redux-saga/effects\";\r\n\r\nimport { setLoading } from \"../Common/slice\";\r\n\r\nimport axios from \"../../axiosInstance\";\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IUserLoginForm } from \"types\";\r\n\r\ninterface IAuthResult {\r\n  access_token: string;\r\n}\r\n\r\nconst registerUser = (action?: PayloadAction<IUserLoginForm>) => {\r\n  return axios.post<IAuthResult>(\"/auth/register\", {\r\n    email: \" action.payload.email\",\r\n    password: \"action.payload.password\",\r\n  });\r\n};\r\nexport function* registerSaga(\r\n  action: PayloadAction<IUserLoginForm>\r\n): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const result = yield call(registerUser());\r\n    if (result) localStorage.setItem(\"Mtoken\", result.access_token);\r\n  } catch (err) {\r\n    console.error(\"sagaERR registerSaga\", err);\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n\r\nexport function* loginSaga(action: PayloadAction<IUserLoginForm>): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const result: IAuthResult = yield axios.post(\"/auth/login\", {\r\n      email: action.payload.email,\r\n      password: action.payload.password,\r\n    });\r\n    localStorage.setItem(\"Mtoken\", result.access_token);\r\n  } catch (err) {\r\n    console.error(\"sagaERR registerSaga\", err);\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;AAQA,MAAMC,YAAY,GAAIC,MAAD,IAA4C;EAC/D,OAAOF,KAAK,CAACG,IAAN,CAAwB,gBAAxB,EAA0C;IAC/CC,KAAK,EAAE,uBADwC;IAE/CC,QAAQ,EAAE;EAFqC,CAA1C,CAAP;AAID,CALD;;AAMA,OAAO,UAAUC,YAAV,CACLJ,MADK,EAEM;EACX,MAAMJ,GAAG,CAACC,UAAU,CAAC,IAAD,CAAX,CAAT;;EACA,IAAI;IACF,MAAMQ,MAAM,GAAG,MAAMV,IAAI,CAACI,YAAY,EAAb,CAAzB;IACA,IAAIM,MAAJ,EAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BF,MAAM,CAACG,YAAtC;EACb,CAHD,CAGE,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;EACD,CALD,SAKU;IACR,MAAMb,GAAG,CAACC,UAAU,CAAC,KAAD,CAAX,CAAT;EACD;AACF;AAED,OAAO,UAAUe,SAAV,CAAoBZ,MAApB,EAAsE;EAC3E,MAAMJ,GAAG,CAACC,UAAU,CAAC,IAAD,CAAX,CAAT;;EACA,IAAI;IACF,MAAMQ,MAAmB,GAAG,MAAMP,KAAK,CAACG,IAAN,CAAW,aAAX,EAA0B;MAC1DC,KAAK,EAAEF,MAAM,CAACa,OAAP,CAAeX,KADoC;MAE1DC,QAAQ,EAAEH,MAAM,CAACa,OAAP,CAAeV;IAFiC,CAA1B,CAAlC;IAIAG,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BF,MAAM,CAACG,YAAtC;EACD,CAND,CAME,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;EACD,CARD,SAQU;IACR,MAAMb,GAAG,CAACC,UAAU,CAAC,KAAD,CAAX,CAAT;EACD;AACF"},"metadata":{},"sourceType":"module"}