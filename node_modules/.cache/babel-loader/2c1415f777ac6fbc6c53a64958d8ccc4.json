{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/screens/EditMoviePage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { editMovie, getCurrentMovie } from \"redux/Movie/slice\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport MovieForm from \"components/common/MovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditMoviePage = () => {\n  _s();\n\n  const currentMovie = useAppSelector(state => state.Movie.currentMovie);\n  const loading = useAppSelector(state => state.Common.loading);\n  const email = useAppSelector(state => state.Auth.email);\n  const params = useParams();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    (!currentMovie || (currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.id.toString()) !== params.id) && !loading && dispatch(getCurrentMovie(params.id));\n\n    if (!email) {\n      const localStorageEmail = localStorage.getItem(\"email\");\n      localStorageEmail && dispatch(setEmail(localStorageEmail));\n    }\n  }, [params.id, currentMovie, dispatch, email, loading]);\n\n  const submitForm = data => {\n    if ((currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.name) !== data.name || currentMovie.description !== data.description) if (currentMovie !== null && currentMovie !== void 0 && currentMovie.id) dispatch(editMovie({ ...data,\n      id: currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.id\n    }));\n  };\n\n  if (currentMovie) return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      onSubmit: submitForm,\n      initValue: currentMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n  return null;\n};\n\n_s(EditMoviePage, \"POuWC2H0cZeCl3GIj3UisLOVC4c=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useParams, useAppDispatch];\n});\n\n_c = EditMoviePage;\nexport default EditMoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMoviePage\");","map":{"version":3,"names":["Fragment","useEffect","useParams","useAppDispatch","useAppSelector","editMovie","getCurrentMovie","setEmail","MovieForm","EditMoviePage","currentMovie","state","Movie","loading","Common","email","Auth","params","dispatch","id","toString","localStorageEmail","localStorage","getItem","submitForm","data","name","description"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/screens/EditMoviePage/index.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { editMovie, getCurrentMovie } from \"redux/Movie/slice\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport { IFormValues } from \"types/types\";\nimport MovieForm from \"components/common/MovieForm\";\n\nconst EditMoviePage = () => {\n  const currentMovie = useAppSelector((state) => state.Movie.currentMovie);\n\n  const loading = useAppSelector((state) => state.Common.loading);\n  const email = useAppSelector((state) => state.Auth.email);\n\n  const params = useParams();\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    (!currentMovie || currentMovie?.id.toString() !== params.id) &&\n      !loading &&\n      dispatch(getCurrentMovie(params.id));\n    if (!email) {\n      const localStorageEmail = localStorage.getItem(\"email\");\n      localStorageEmail && dispatch(setEmail(localStorageEmail));\n    }\n  }, [params.id, currentMovie, dispatch, email, loading]);\n\n  const submitForm = (data: IFormValues) => {\n    if (\n      currentMovie?.name !== data.name ||\n      currentMovie.description !== data.description\n    )\n      if (currentMovie?.id)\n        dispatch(editMovie({ ...data, id: currentMovie?.id }));\n  };\n\n  if (currentMovie)\n    return (\n      <Fragment>\n        <h3>Edit Movie</h3>\n        <MovieForm onSubmit={submitForm} initValue={currentMovie} />\n      </Fragment>\n    );\n  return null;\n};\nexport default EditMoviePage;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,mBAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,YAAY,GAAGN,cAAc,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,YAAxB,CAAnC;EAEA,MAAMG,OAAO,GAAGT,cAAc,CAAEO,KAAD,IAAWA,KAAK,CAACG,MAAN,CAAaD,OAAzB,CAA9B;EACA,MAAME,KAAK,GAAGX,cAAc,CAAEO,KAAD,IAAWA,KAAK,CAACK,IAAN,CAAWD,KAAvB,CAA5B;EAEA,MAAME,MAAM,GAAGf,SAAS,EAAxB;EAEA,MAAMgB,QAAQ,GAAGf,cAAc,EAA/B;EAEAF,SAAS,CAAC,MAAM;IACd,CAAC,CAACS,YAAD,IAAiB,CAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAES,EAAd,CAAiBC,QAAjB,QAAgCH,MAAM,CAACE,EAAzD,KACE,CAACN,OADH,IAEEK,QAAQ,CAACZ,eAAe,CAACW,MAAM,CAACE,EAAR,CAAhB,CAFV;;IAGA,IAAI,CAACJ,KAAL,EAAY;MACV,MAAMM,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;MACAF,iBAAiB,IAAIH,QAAQ,CAACX,QAAQ,CAACc,iBAAD,CAAT,CAA7B;IACD;EACF,CARQ,EAQN,CAACJ,MAAM,CAACE,EAAR,EAAYT,YAAZ,EAA0BQ,QAA1B,EAAoCH,KAApC,EAA2CF,OAA3C,CARM,CAAT;;EAUA,MAAMW,UAAU,GAAIC,IAAD,IAAuB;IACxC,IACE,CAAAf,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEgB,IAAd,MAAuBD,IAAI,CAACC,IAA5B,IACAhB,YAAY,CAACiB,WAAb,KAA6BF,IAAI,CAACE,WAFpC,EAIE,IAAIjB,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAES,EAAlB,EACED,QAAQ,CAACb,SAAS,CAAC,EAAE,GAAGoB,IAAL;MAAWN,EAAE,EAAET,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAES;IAA7B,CAAD,CAAV,CAAR;EACL,CAPD;;EASA,IAAIT,YAAJ,EACE,oBACE,QAAC,QAAD;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,QAAQ,EAAEc,UAArB;MAAiC,SAAS,EAAEd;IAA5C;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;EAMF,OAAO,IAAP;AACD,CArCD;;GAAMD,a;UACiBL,c,EAELA,c,EACFA,c,EAECF,S,EAEEC,c;;;KARbM,a;AAsCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}