{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/screens/EditMoviePage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { getCurrentMovie } from \"redux/Movie/slice\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(\"this field is required\").matches(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/, \"Enter a valid Email Address\"),\n  password: yup.string().required(\"this field is required\").min(4, \"Password is too short - should be 4 chars minimum.\")\n}).required();\n\nconst EditMoviePage = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    reValidateMode: \"onChange\",\n    resolver: yupResolver(schema),\n    shouldFocusError: true\n  });\n  const currentMovie = useAppSelector(state => state.Movie.currentMovie);\n  const loading = useAppSelector(state => state.Common.loading);\n  const email = useAppSelector(state => state.Auth.email);\n  const params = useParams();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    (!currentMovie || (currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.id.toString()) !== params.id) && !loading && dispatch(getCurrentMovie(params.id));\n\n    if (!email) {\n      const localStorageEmail = localStorage.getItem(\"email\");\n      localStorageEmail && dispatch(setEmail(localStorageEmail));\n    }\n  }, [params.id]);\n  if (currentMovie) return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"name\",\n        placeholder: \"with a placeholder\",\n        ...register(\"name\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        placeholder: \"with a placeholder\",\n        ...register(\"description\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n  return null;\n};\n\n_s(EditMoviePage, \"1QNxOIPu1IonXU7+V0l5r3biOIA=\", false, function () {\n  return [useForm, useAppSelector, useAppSelector, useAppSelector, useParams, useNavigate, useAppDispatch];\n});\n\n_c = EditMoviePage;\nexport default EditMoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMoviePage\");","map":{"version":3,"names":["useEffect","useNavigate","useParams","yup","useForm","yupResolver","useAppDispatch","useAppSelector","getCurrentMovie","setEmail","Button","Form","FormGroup","Input","Label","schema","object","email","string","required","matches","password","min","EditMoviePage","register","handleSubmit","formState","errors","reValidateMode","resolver","shouldFocusError","currentMovie","state","Movie","loading","Common","Auth","params","navigate","dispatch","id","toString","localStorageEmail","localStorage","getItem"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/screens/EditMoviePage/index.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport * as yup from \"yup\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { getCurrentMovie } from \"redux/Movie/slice\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { IFormValues } from \"types/types\";\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .required(\"this field is required\")\n      .matches(\n        /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/,\n        \"Enter a valid Email Address\"\n      ),\n    password: yup\n      .string()\n      .required(\"this field is required\")\n      .min(4, \"Password is too short - should be 4 chars minimum.\"),\n  })\n  .required();\n\nconst EditMoviePage = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IFormValues>({\n    reValidateMode: \"onChange\",\n\n    resolver: yupResolver(schema),\n    shouldFocusError: true,\n  });\n\n  const currentMovie = useAppSelector((state) => state.Movie.currentMovie);\n  const loading = useAppSelector((state) => state.Common.loading);\n  const email = useAppSelector((state) => state.Auth.email);\n\n  const params = useParams();\n\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    (!currentMovie || currentMovie?.id.toString() !== params.id) &&\n      !loading &&\n      dispatch(getCurrentMovie(params.id));\n    if (!email) {\n      const localStorageEmail = localStorage.getItem(\"email\");\n      localStorageEmail && dispatch(setEmail(localStorageEmail));\n    }\n  }, [params.id]);\n\n  if (currentMovie)\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input\n            id=\"name\"\n            placeholder=\"with a placeholder\"\n            {...register(\"name\", { required: true })}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input\n            id=\"description\"\n            placeholder=\"with a placeholder\"\n            {...register(\"description\", { required: true })}\n          />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n  return null;\n};\nexport default EditMoviePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}