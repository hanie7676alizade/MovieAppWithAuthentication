{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport { setAlert, setLoading, setRedirect } from \"../Common/slice\";\nimport axios from \"../../axiosInstance\";\nimport { setEmail } from \"./slice\";\nimport jwt from \"jwt-decode\";\nexport function* registerSaga(action) {\n  yield put(setLoading(true));\n\n  try {\n    const result = yield axios.post(\"/auth/register\", {\n      email: action.payload.email,\n      password: action.payload.password\n    });\n    console.log(result, result.data.access_token, \"result\");\n    yield put(setEmail(action.payload.email));\n    let userData = jwt(result.data.access_token);\n    yield localStorage.setItem(\"email\", userData.email.toString());\n    yield localStorage.setItem(\"Mtoken\", result.data.access_token);\n    yield put(setAlert({\n      state: true,\n      text: \"Welcome to my Movie App :)\",\n      color: \"success\"\n    }));\n    yield put(setRedirect({\n      state: true,\n      url: \"/\"\n    }));\n  } catch (err) {\n    console.error(\"sagaERR registerSaga\", err);\n    yield put(setAlert({\n      state: true,\n      text: \"Something Wrong!\",\n      color: \"danger\"\n    }));\n  } finally {\n    yield put(setLoading(false));\n  }\n}\nexport function* loginSaga(action) {\n  yield put(setLoading(true));\n\n  try {\n    const result = yield axios.post(\"/auth/login\", {\n      email: action.payload.email,\n      password: action.payload.password\n    });\n    console.log(result, result.data.access_token, \"result\");\n    yield put(setEmail(action.payload.email));\n    let userData = jwt(result.data.access_token);\n    yield localStorage.setItem(\"email\", userData.email.toString());\n    yield localStorage.setItem(\"Mtoken\", result.data.access_token);\n    yield put(setAlert({\n      state: true,\n      text: \"Welcome to my Movie App :)\",\n      color: \"success\"\n    }));\n    yield put(setRedirect({\n      state: true,\n      url: \"/\"\n    }));\n  } catch (err) {\n    console.error(\"sagaERR registerSaga\", err);\n    yield put(setAlert({\n      state: true,\n      text: \"Something Wrong!\",\n      color: \"danger\"\n    }));\n  } finally {\n    yield put(setLoading(false));\n  }\n}\nexport function* logoutSaga(action) {\n  yield put(setLoading(true));\n\n  try {\n    // const result: any = yield axios.post(\"/auth/login\", {\n    //   email: action.payload.email,\n    //   password: action.payload.password,\n    // });\n    // console.log(result, result.data.access_token, \"result\");\n    // yield put(setEmail(action.payload.email));\n    // let userData: any = jwt(result.data.access_token);\n    yield localStorage.removeItem(\"email\");\n    yield localStorage.removeItem(\"Mtoken\");\n    yield put(setRedirect({\n      state: true,\n      url: \"/\"\n    }));\n  } catch (err) {\n    console.error(\"sagaERR logoutSaga\", err);\n    yield put(setAlert({\n      state: true,\n      text: \"Something Wrong!\",\n      color: \"danger\"\n    }));\n  } finally {\n    yield put(setLoading(false));\n  }\n}","map":{"version":3,"names":["put","setAlert","setLoading","setRedirect","axios","setEmail","jwt","registerSaga","action","result","post","email","payload","password","console","log","data","access_token","userData","localStorage","setItem","toString","state","text","color","url","err","error","loginSaga","logoutSaga","removeItem"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/redux/Auth/sagas.ts"],"sourcesContent":["import { put } from \"redux-saga/effects\";\r\n\r\nimport { setAlert, setLoading, setRedirect } from \"../Common/slice\";\r\n\r\nimport axios from \"../../axiosInstance\";\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IUserLoginForm } from \"types/types\";\r\nimport { setEmail } from \"./slice\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nexport function* registerSaga(\r\n  action: PayloadAction<IUserLoginForm>\r\n): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const result: any = yield axios.post(\"/auth/register\", {\r\n      email: action.payload.email,\r\n      password: action.payload.password,\r\n    });\r\n    console.log(result, result.data.access_token, \"result\");\r\n\r\n    yield put(setEmail(action.payload.email));\r\n\r\n    let userData: any = jwt(result.data.access_token);\r\n\r\n    yield localStorage.setItem(\"email\", userData.email.toString());\r\n    yield localStorage.setItem(\"Mtoken\", result.data.access_token);\r\n    yield put(\r\n      setAlert({\r\n        state: true,\r\n        text: \"Welcome to my Movie App :)\",\r\n        color: \"success\",\r\n      })\r\n    );\r\n    yield put(setRedirect({ state: true, url: \"/\" }));\r\n  } catch (err) {\r\n    console.error(\"sagaERR registerSaga\", err);\r\n    yield put(\r\n      setAlert({\r\n        state: true,\r\n        text: \"Something Wrong!\",\r\n        color: \"danger\",\r\n      })\r\n    );\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n\r\nexport function* loginSaga(action: PayloadAction<IUserLoginForm>): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    const result: any = yield axios.post(\"/auth/login\", {\r\n      email: action.payload.email,\r\n      password: action.payload.password,\r\n    });\r\n    console.log(result, result.data.access_token, \"result\");\r\n\r\n    yield put(setEmail(action.payload.email));\r\n    let userData: any = jwt(result.data.access_token);\r\n\r\n    yield localStorage.setItem(\"email\", userData.email.toString());\r\n    yield localStorage.setItem(\"Mtoken\", result.data.access_token);\r\n    yield put(\r\n      setAlert({\r\n        state: true,\r\n        text: \"Welcome to my Movie App :)\",\r\n        color: \"success\",\r\n      })\r\n    );\r\n    yield put(setRedirect({ state: true, url: \"/\" }));\r\n  } catch (err) {\r\n    console.error(\"sagaERR registerSaga\", err);\r\n    yield put(\r\n      setAlert({\r\n        state: true,\r\n        text: \"Something Wrong!\",\r\n        color: \"danger\",\r\n      })\r\n    );\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n\r\nexport function* logoutSaga(action: PayloadAction<IUserLoginForm>): Generator {\r\n  yield put(setLoading(true));\r\n  try {\r\n    // const result: any = yield axios.post(\"/auth/login\", {\r\n    //   email: action.payload.email,\r\n    //   password: action.payload.password,\r\n    // });\r\n    // console.log(result, result.data.access_token, \"result\");\r\n\r\n    // yield put(setEmail(action.payload.email));\r\n    // let userData: any = jwt(result.data.access_token);\r\n\r\n    yield localStorage.removeItem(\"email\");\r\n    yield localStorage.removeItem(\"Mtoken\");\r\n\r\n    yield put(setRedirect({ state: true, url: \"/\" }));\r\n  } catch (err) {\r\n    console.error(\"sagaERR logoutSaga\", err);\r\n    yield put(\r\n      setAlert({\r\n        state: true,\r\n        text: \"Something Wrong!\",\r\n        color: \"danger\",\r\n      })\r\n    );\r\n  } finally {\r\n    yield put(setLoading(false));\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}