{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/components/common/MovieForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Button, Form, FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(\"this field is required\").matches(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/, \"Enter a valid Email Address\"),\n  password: yup.string().required(\"this field is required\").min(4, \"Password is too short - should be 4 chars minimum.\")\n}).required();\n\nconst MovieForm = props => {\n  _s();\n\n  var _props$initValue, _props$initValue2;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      name: (_props$initValue = props.initValue) === null || _props$initValue === void 0 ? void 0 : _props$initValue.name,\n      description: (_props$initValue2 = props.initValue) === null || _props$initValue2 === void 0 ? void 0 : _props$initValue2.description\n    },\n    resolver: yupResolver(schema),\n    shouldFocusError: true\n  });\n  console.log(props.initValue, {\n    errors\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(props.onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"name\",\n        type: \"text\",\n        ...register(\"name\", {\n          required: true\n        }),\n        invalid: !!errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n        children: \"Sweet! that name is available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        type: \"text\",\n        ...register(\"description\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieForm, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["yup","useForm","yupResolver","Button","Form","FormFeedback","FormGroup","Input","Label","schema","object","email","string","required","matches","password","min","MovieForm","props","register","handleSubmit","formState","errors","reValidateMode","defaultValues","name","initValue","description","resolver","shouldFocusError","console","log","onSubmit"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/components/common/MovieForm/index.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport * as yup from \"yup\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport {\n  Button,\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport { IFormValues } from \"types/types\";\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .required(\"this field is required\")\n      .matches(\n        /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/,\n        \"Enter a valid Email Address\"\n      ),\n    password: yup\n      .string()\n      .required(\"this field is required\")\n      .min(4, \"Password is too short - should be 4 chars minimum.\"),\n  })\n  .required();\n\ninterface Iprops {\n  onSubmit: SubmitHandler<IFormValues>;\n  initValue?: IFormValues | undefined;\n}\n\nconst MovieForm = (props: Iprops) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IFormValues>({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      name: props.initValue?.name,\n      description: props.initValue?.description,\n    },\n    resolver: yupResolver(schema),\n    shouldFocusError: true,\n  });\n\n  console.log(props.initValue, { errors });\n\n  return (\n    <Form onSubmit={handleSubmit(props.onSubmit)}>\n      <FormGroup>\n        <Label for=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          {...register(\"name\", { required: true })}\n          invalid={!!errors.name}\n        />\n        <FormFeedback>Sweet! that name is available</FormFeedback>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"description\">Description</Label>\n        <Input\n          id=\"description\"\n          type=\"text\"\n          {...register(\"description\", { required: true })}\n        />\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n  );\n};\nexport default MovieForm;\n"],"mappings":";;;AAEA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAuC,iBAAvC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAIA,SACEC,MADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,QAOO,YAPP;;AAUA,MAAMC,MAAM,GAAGT,GAAG,CACfU,MADY,CACL;EACNC,KAAK,EAAEX,GAAG,CACPY,MADI,GAEJC,QAFI,CAEK,wBAFL,EAGJC,OAHI,CAIH,6CAJG,EAKH,6BALG,CADD;EAQNC,QAAQ,EAAEf,GAAG,CACVY,MADO,GAEPC,QAFO,CAEE,wBAFF,EAGPG,GAHO,CAGH,CAHG,EAGA,oDAHA;AARJ,CADK,EAcZH,QAdY,EAAf;;AAqBA,MAAMI,SAAS,GAAIC,KAAD,IAAmB;EAAA;;EAAA;;EACnC,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,SAAS,EAAE;MAAEC;IAAF;EAHP,IAIFrB,OAAO,CAAc;IACvBsB,cAAc,EAAE,UADO;IAEvBC,aAAa,EAAE;MACbC,IAAI,sBAAEP,KAAK,CAACQ,SAAR,qDAAE,iBAAiBD,IADV;MAEbE,WAAW,uBAAET,KAAK,CAACQ,SAAR,sDAAE,kBAAiBC;IAFjB,CAFQ;IAMvBC,QAAQ,EAAE1B,WAAW,CAACO,MAAD,CANE;IAOvBoB,gBAAgB,EAAE;EAPK,CAAd,CAJX;EAcAC,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACQ,SAAlB,EAA6B;IAAEJ;EAAF,CAA7B;EAEA,oBACE,QAAC,IAAD;IAAM,QAAQ,EAAEF,YAAY,CAACF,KAAK,CAACc,QAAP,CAA5B;IAAA,wBACE,QAAC,SAAD;MAAA,wBACE,QAAC,KAAD;QAAO,GAAG,EAAC,MAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,EAAE,EAAC,MADL;QAEE,IAAI,EAAC,MAFP;QAAA,GAGMb,QAAQ,CAAC,MAAD,EAAS;UAAEN,QAAQ,EAAE;QAAZ,CAAT,CAHd;QAIE,OAAO,EAAE,CAAC,CAACS,MAAM,CAACG;MAJpB;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE,QAAC,YAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAWE,QAAC,SAAD;MAAA,wBACE,QAAC,KAAD;QAAO,GAAG,EAAC,aAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,EAAE,EAAC,aADL;QAEE,IAAI,EAAC,MAFP;QAAA,GAGMN,QAAQ,CAAC,aAAD,EAAgB;UAAEN,QAAQ,EAAE;QAAZ,CAAhB;MAHd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAmBE,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAxCD;;GAAMI,S;UAKAhB,O;;;KALAgB,S;AAyCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}