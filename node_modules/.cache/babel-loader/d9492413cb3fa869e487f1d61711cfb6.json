{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/components/screens/RegisterPage/RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classes from \"./RegisterForm.module.scss\";\nimport Button from \"components/common/Button\";\nimport { useAppDispatch } from \"redux/hooks\";\nimport { registerUser } from \"redux/Auth/slice\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(\"this field is required\").matches(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/, \"Enter a valid Email Address\"),\n  password: yup.string().required(\"this field is required\").min(8, \"Password is too short - should be 8 chars minimum.\"),\n  confirmPassword: yup.string().required(\"this field is required\").min(8, \"Password is too short - should be 8 chars minimum.\").oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n}).required();\n\nconst RegisterForm = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    shouldFocusError: true\n  });\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [confirmPasswordShown, setconfirmPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = setState => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const dispatch = useAppDispatch();\n\n  const onSubmit = async data => {\n    console.log(data, \"data\");\n    dispatch(registerUser({ ...data\n    }));\n    console.log(yup.ref(\"password\"), \"yup\");\n  }; // console.log(errors, \"ERR\");\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n        required: true\n      }),\n      id: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n        required: true\n      }),\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"confirmPassword\",\n      children: \"Password Retype:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"confirmPassword\", {\n        required: true\n      }),\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.confirmPassword.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"Rk9kK0RDN+eGIgdGtlta5gx7jPc=\", false, function () {\n  return [useForm, useAppDispatch];\n});\n\n_c = RegisterForm;\n;\n;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useForm","yupResolver","yup","classes","Button","useAppDispatch","registerUser","useState","schema","object","email","string","required","matches","password","min","confirmPassword","oneOf","ref","RegisterForm","props","register","handleSubmit","formState","errors","resolver","shouldFocusError","passwordShown","setPasswordShown","confirmPasswordShown","setconfirmPasswordShown","togglePasswordVisiblity","setState","dispatch","onSubmit","data","console","log","form","message"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/components/screens/RegisterPage/RegisterForm.tsx"],"sourcesContent":["import { useForm, SubmitHandler } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { IUserRegisterForm } from \"types\";\nimport classes from \"./RegisterForm.module.scss\";\nimport Button from \"components/common/Button\";\nimport { useAppDispatch } from \"redux/hooks\";\nimport { registerUser } from \"redux/Auth/slice\";\nimport { useState } from \"react\";\n\ninterface Iprops {\n  onSubmit: SubmitHandler<IUserRegisterForm>;\n}\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .required(\"this field is required\")\n      .matches(\n        /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/,\n        \"Enter a valid Email Address\"\n      ),\n    password: yup\n      .string()\n      .required(\"this field is required\")\n      .min(8, \"Password is too short - should be 8 chars minimum.\"),\n    confirmPassword: yup\n      .string()\n      .required(\"this field is required\")\n      .min(8, \"Password is too short - should be 8 chars minimum.\")\n      .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n  })\n  .required();\n\nconst RegisterForm = (props: Iprops) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IUserRegisterForm>({\n    resolver: yupResolver(schema),\n    shouldFocusError: true,\n  });\n  const [passwordShown, setPasswordShown] = useState<boolean>(false);\n  const [confirmPasswordShown, setconfirmPasswordShown] =\n    useState<boolean>(false);\n\n  const togglePasswordVisiblity = (setState: () => viod) => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const dispatch = useAppDispatch();\n\n  const onSubmit = async (data: IUserRegisterForm) => {\n    console.log(data, \"data\");\n    dispatch(registerUser({ ...data }));\n    console.log(yup.ref(\"password\"), \"yup\");\n  };\n  // console.log(errors, \"ERR\");\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <label htmlFor=\"email\">Email Address:</label>\n      <input {...register(\"email\", { required: true })} id=\"email\" />\n      {errors.email && <p>{errors.email.message}</p>}\n      <label htmlFor=\"password\">Password:</label>\n      <input {...register(\"password\", { required: true })} type=\"password\" />\n      {/* <span onClick={() => showPassword(yup.re)}>show</span> */}\n      {errors.password && <p>{errors.password.message}</p>}\n      <label htmlFor=\"confirmPassword\">Password Retype:</label>\n      <input\n        {...register(\"confirmPassword\", { required: true })}\n        type=\"password\"\n      />\n      {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  );\n};;;\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}