{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/screens/EditMoviePage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { editMovie, getCurrentMovie } from \"redux/Movie/slice\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport MovieForm from \"components/common/MovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditMoviePage = () => {\n  _s();\n\n  const currentMovie = useAppSelector(state => state.Movie.currentMovie);\n  const loading = useAppSelector(state => state.Common.loading);\n  const email = useAppSelector(state => state.Auth.email);\n  const params = useParams();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    (!currentMovie || (currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.id.toString()) !== params.id) && !loading && dispatch(getCurrentMovie(params.id));\n\n    if (!email) {\n      const localStorageEmail = localStorage.getItem(\"email\");\n      localStorageEmail && dispatch(setEmail(localStorageEmail));\n    }\n  }, [params.id]);\n\n  const submitForm = data => {\n    console.log({\n      data\n    });\n    (currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.id) && dispatch(editMovie({ ...data,\n      id: currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.id\n    }));\n  };\n\n  if (currentMovie) return /*#__PURE__*/_jsxDEV(MovieForm, {\n    onSubmit: submitForm,\n    initValue: currentMovie\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n  return null;\n};\n\n_s(EditMoviePage, \"POuWC2H0cZeCl3GIj3UisLOVC4c=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useParams, useAppDispatch];\n});\n\n_c = EditMoviePage;\nexport default EditMoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMoviePage\");","map":{"version":3,"names":["useEffect","useParams","useAppDispatch","useAppSelector","editMovie","getCurrentMovie","setEmail","MovieForm","EditMoviePage","currentMovie","state","Movie","loading","Common","email","Auth","params","dispatch","id","toString","localStorageEmail","localStorage","getItem","submitForm","data","console","log"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/screens/EditMoviePage/index.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport * as yup from \"yup\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { editMovie, getCurrentMovie } from \"redux/Movie/slice\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { IFormValues } from \"types/types\";\nimport MovieForm from \"components/common/MovieForm\";\n\nconst EditMoviePage = () => {\n  const currentMovie = useAppSelector((state) => state.Movie.currentMovie);\n\n  const loading = useAppSelector((state) => state.Common.loading);\n  const email = useAppSelector((state) => state.Auth.email);\n\n  const params = useParams();\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    (!currentMovie || currentMovie?.id.toString() !== params.id) &&\n      !loading &&\n      dispatch(getCurrentMovie(params.id));\n    if (!email) {\n      const localStorageEmail = localStorage.getItem(\"email\");\n      localStorageEmail && dispatch(setEmail(localStorageEmail));\n    }\n  }, [params.id]);\n\n  const submitForm = (data: IFormValues) => {\n    console.log({ data });\n    currentMovie?.id && dispatch(editMovie({ ...data, id: currentMovie?.id }));\n  };\n\n  if (currentMovie)\n    return <MovieForm onSubmit={submitForm} initValue={currentMovie} />;\n  return null;\n};\nexport default EditMoviePage;\n"],"mappings":";;;AAAA,SAAmBA,SAAnB,QAAoC,OAApC;AACA,SAAsBC,SAAtB,QAAuC,cAAvC;AAKA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,mBAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,YAAY,GAAGN,cAAc,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,YAAxB,CAAnC;EAEA,MAAMG,OAAO,GAAGT,cAAc,CAAEO,KAAD,IAAWA,KAAK,CAACG,MAAN,CAAaD,OAAzB,CAA9B;EACA,MAAME,KAAK,GAAGX,cAAc,CAAEO,KAAD,IAAWA,KAAK,CAACK,IAAN,CAAWD,KAAvB,CAA5B;EAEA,MAAME,MAAM,GAAGf,SAAS,EAAxB;EAEA,MAAMgB,QAAQ,GAAGf,cAAc,EAA/B;EAEAF,SAAS,CAAC,MAAM;IACd,CAAC,CAACS,YAAD,IAAiB,CAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAES,EAAd,CAAiBC,QAAjB,QAAgCH,MAAM,CAACE,EAAzD,KACE,CAACN,OADH,IAEEK,QAAQ,CAACZ,eAAe,CAACW,MAAM,CAACE,EAAR,CAAhB,CAFV;;IAGA,IAAI,CAACJ,KAAL,EAAY;MACV,MAAMM,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;MACAF,iBAAiB,IAAIH,QAAQ,CAACX,QAAQ,CAACc,iBAAD,CAAT,CAA7B;IACD;EACF,CARQ,EAQN,CAACJ,MAAM,CAACE,EAAR,CARM,CAAT;;EAUA,MAAMK,UAAU,GAAIC,IAAD,IAAuB;IACxCC,OAAO,CAACC,GAAR,CAAY;MAAEF;IAAF,CAAZ;IACA,CAAAf,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAES,EAAd,KAAoBD,QAAQ,CAACb,SAAS,CAAC,EAAE,GAAGoB,IAAL;MAAWN,EAAE,EAAET,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAES;IAA7B,CAAD,CAAV,CAA5B;EACD,CAHD;;EAKA,IAAIT,YAAJ,EACE,oBAAO,QAAC,SAAD;IAAW,QAAQ,EAAEc,UAArB;IAAiC,SAAS,EAAEd;EAA5C;IAAA;IAAA;IAAA;EAAA,QAAP;EACF,OAAO,IAAP;AACD,CA5BD;;GAAMD,a;UACiBL,c,EAELA,c,EACFA,c,EAECF,S,EAEEC,c;;;KARbM,a;AA6BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}