{"ast":null,"code":"var _jsxFileName = \"/home/hanie/Documents/demoProjects/movie-suggest/src/components/common/MovieForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Button, Form, FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\nimport classes from \"./MovieForm.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(\"this field is required\").matches(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/, \"Enter a valid Email Address\"),\n  password: yup.string().required(\"this field is required\").min(4, \"Password is too short - should be 4 chars minimum.\")\n}).required();\n\nconst MovieForm = props => {\n  _s();\n\n  var _props$initValue, _props$initValue2, _errors$name, _errors$description;\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      name: (_props$initValue = props.initValue) === null || _props$initValue === void 0 ? void 0 : _props$initValue.name,\n      description: (_props$initValue2 = props.initValue) === null || _props$initValue2 === void 0 ? void 0 : _props$initValue2.description\n    },\n    resolver: yupResolver(schema),\n    shouldFocusError: true\n  });\n  console.log(props.initValue, {\n    errors\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(props.onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      className: classes.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Input, { ...field,\n            invalid: !!errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 34\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n        className: classes.ErrText,\n        children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: classes.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"description\",\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Input, { ...field,\n            invalid: !!errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n        className: classes.ErrText,\n        children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieForm, \"+LElIVSeKZBRoMndEZmClgt6yeM=\", false, function () {\n  return [useForm];\n});\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["yup","useForm","Controller","yupResolver","Button","Form","FormFeedback","FormGroup","Input","Label","classes","schema","object","email","string","required","matches","password","min","MovieForm","props","register","handleSubmit","control","formState","errors","reValidateMode","defaultValues","name","initValue","description","resolver","shouldFocusError","console","log","onSubmit","formGroup","field","ErrText","message"],"sources":["/home/hanie/Documents/demoProjects/movie-suggest/src/components/common/MovieForm/index.tsx"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport * as yup from \"yup\";\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { setEmail } from \"redux/Auth/slice\";\nimport {\n  Button,\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport { IFormValues } from \"types/types\";\nimport classes from \"./MovieForm.module.scss\";\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .required(\"this field is required\")\n      .matches(\n        /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/,\n        \"Enter a valid Email Address\"\n      ),\n    password: yup\n      .string()\n      .required(\"this field is required\")\n      .min(4, \"Password is too short - should be 4 chars minimum.\"),\n  })\n  .required();\n\ninterface Iprops {\n  onSubmit: SubmitHandler<IFormValues>;\n  initValue?: IFormValues | undefined;\n}\n\nconst MovieForm = (props: Iprops) => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<IFormValues>({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      name: props.initValue?.name,\n      description: props.initValue?.description,\n    },\n    resolver: yupResolver(schema),\n    shouldFocusError: true,\n  });\n\n  console.log(props.initValue, { errors });\n\n  return (\n    <Form onSubmit={handleSubmit(props.onSubmit)}>\n      <FormGroup className={classes.formGroup}>\n        <Label for=\"name\">Name</Label>\n\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => <Input {...field} invalid={!!errors.name} />}\n        />\n        <FormFeedback className={classes.ErrText}>\n          {errors.name?.message}\n        </FormFeedback>\n      </FormGroup>\n      <FormGroup className={classes.formGroup}>\n        <Label for=\"description\">Description</Label>\n\n        <Controller\n          control={control}\n          name=\"description\"\n          render={({ field }) => (\n            <Input {...field} invalid={!!errors.description} />\n          )}\n        />\n        <FormFeedback className={classes.ErrText}>\n          {errors.description?.message}\n        </FormFeedback>\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n  );\n};\nexport default MovieForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}